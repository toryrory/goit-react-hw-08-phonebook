{"version":3,"file":"static/js/915.731dd313.chunk.js","mappings":"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","sources":["formComponents/FormBox.jsx","formComponents/FormTitle.jsx","formComponents/Inputs.jsx","formComponents/SubmitButton.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx","pages/Register/Register.styled.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Box } from '@mui/material';\n\nexport const FormBox = ({ onChange, children }) => {\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={onChange}\n      sx={{\n        width: '470px',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        alignItems: 'center',\n        margin: 'auto',\n        marginTop: '40px',\n        padding: '25px',\n        border: '1px solid black',\n        borderRadius: '8px',\n        '&:hover': {\n          boxShadow: '2px 2px 19px 0px rgba(0, 0, 0, 0.75)',\n        },\n      }}\n      autoComplete=\"off\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nFormBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  children: PropTypes.array.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport AutoStoriesIcon from '@mui/icons-material/AutoStories';\n\nexport const FormTitle = ({ children }) => {\n  return (\n    <Typography\n      variant=\"h4\"\n      textAlign=\"center\"\n      padding=\"25px\"\n      textTransform=\"uppercase\"\n    >\n      {children}\n      <AutoStoriesIcon\n        sx={{\n          fontSize: '35px',\n          marginLeft: '20px',\n        }}\n      />\n    </Typography>\n  );\n};\n\nFormTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n  FormControl,\n  InputLabel,\n} from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\nexport const InputName = ({ name, onChange }) => {\n  return (\n    <TextField\n      sx={{\n        width: '400px',\n      }}\n      color=\"secondary\"\n      type=\"text\"\n      name=\"username\"\n      value={name}\n      variant=\"outlined\"\n      margin=\"normal\"\n      label=\"Username\"\n      placeholder=\"PepaPig\"\n      required\n      onChange={onChange}\n    />\n  );\n};\nexport const InputEmail = ({ email, onChange }) => {\n  return (\n    <TextField\n      sx={{ width: '400px' }}\n      color=\"secondary\"\n      type=\"email\"\n      name=\"email\"\n      value={email}\n      variant=\"outlined\"\n      label=\"Email\"\n      placeholder=\"PepaPig@gmail.com\"\n      margin=\"normal\"\n      required\n      onChange={onChange}\n    />\n  );\n};\nexport const InputPassword = ({ password, onChange }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <FormControl\n      sx={{ width: '400px' }}\n      variant=\"outlined\"\n      margin=\"normal\"\n      color=\"secondary\"\n      placeholder=\"Min 8 symbols required\"\n    >\n      <InputLabel htmlFor=\"outlined-adornment-password\" required>\n        Password\n      </InputLabel>\n      <OutlinedInput\n        id=\"outlined-adornment-password\"\n        type={showPassword ? 'text' : 'password'}\n        label=\"Password_\"\n        placeholder=\"Min 8 symbols required\"\n        onChange={onChange}\n        name=\"password\"\n        value={password}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={() => setShowPassword(!showPassword)}\n              edge=\"end\"\n            >\n              {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n\nInputName.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\nInputEmail.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n};\nInputPassword.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  password: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Button } from '@mui/material';\n\nexport const SubmitButton = ({ children }) => {\n  return (\n    <Button\n      type=\"submit\"\n      variant=\"outlined\"\n      sx={{\n        width: '150px',\n        marginTop: '20px',\n        marginBottom: '20px',\n        display: 'flex',\n        justifyContent: 'center',\n        color: '#dd5050',\n        borderColor: '#dd5050',\n        '&:hover': {\n          backgroundColor: '#f2d8d86c',\n          borderColor: '#dd5050',\n        },\n      }}\n    >\n      {children}\n    </Button>\n  );\n};\n\nSubmitButton.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import { Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/operations';\nimport { InputName, InputEmail, InputPassword } from 'formComponents/Inputs';\nimport { SubmitButton } from 'formComponents/SubmitButton';\nimport { FormTitle } from 'formComponents/FormTitle';\nimport { FormBox } from 'formComponents/FormBox';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'username':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.registration({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FormBox onChange={handleSubmit}>\n      <FormTitle>Create Account</FormTitle>\n      <InputName name={name} onChange={handleInput} />\n      <InputEmail email={email} onChange={handleInput} />\n      <InputPassword password={password} onChange={handleInput} />\n      <SubmitButton>Register</SubmitButton>\n      <Typography>\n        <NavLink to=\"/login\">Log In</NavLink> if you already have an account.\n      </Typography>\n    </FormBox>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Title } from './Register.styled';\n\nconst Registration = () => {\n  return (\n    <div>\n      <Title>Registration page</Title>\n      <RegisterForm />\n    </div>\n  );\n};\nexport default Registration;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  text-transform: uppercase;\n`;"],"names":["FormBox","onChange","children","component","onSubmit","sx","width","display","flexDirection","backgroundColor","alignItems","margin","marginTop","padding","border","borderRadius","boxShadow","autoComplete","FormTitle","variant","textAlign","textTransform","fontSize","marginLeft","InputName","name","color","type","value","label","placeholder","required","InputEmail","email","InputPassword","password","useState","showPassword","setShowPassword","htmlFor","id","endAdornment","position","onClick","edge","SubmitButton","marginBottom","justifyContent","borderColor","RegisterForm","setName","setEmail","setPassword","dispatch","useDispatch","handleInput","target","e","preventDefault","authOperations","Typography","to","Title","styled"],"sourceRoot":""}