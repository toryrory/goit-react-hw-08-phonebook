{"version":3,"file":"static/js/733.d7a996b5.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","redux/contacts/selectors.js","components/Form/ContactForm.styled.jsx","components/Form/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 3px;\n`;\nexport const Section1 = styled.div`\n  border-radius: 5px 50px 50px 5px;\n  padding: 20px;\n  box-shadow: inset 0px 0px 47px -6px rgb(0 0 0 / 55%);\n  width: 350px;\n  background-color: #dd5050cf;\n  margin-left: auto;\n  margin-top: 80px;\n`;\nexport const Section2 = styled.div`\n  position: relative;\n  border-radius: 50px 5px 5px 50px;\n  padding: 20px;\n  box-shadow: inset 0px 0px 47px -6px rgb(0 0 0 / 55%);\n  width: 350px;\n  background-color: #dd5050cf;\n  margin-right: auto;\n  margin-top: 80px;\n`;\nexport const Spinner = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\nexport const Title = styled.h1`\n  font-size: 38px;\n  font-weight: 700;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  color: #5a1010;\n`;\n","export const selectFilter = state => state.filter.filter;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFiltredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  width: 270px;\n  padding: 15px;\n  border: 2px solid #f0bbae86;\n  border-radius: 5px;\n  box-shadow: 10px 10px 25px -4px rgba(0, 0, 0, 0.75);\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 15px;\n  font-weight: 700;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  color: #5a1010;\n`;\nexport const Input = styled.input`\n  height: 20px;\n  border-radius: 3px;\n  border: none;\n  width: 220px;\n`;\nexport const Button = styled.button`\n  border-radius: 5px;\n  border: 2px solid #5a1010;\n  background-color: white;\n  width: 120px;\n  height: 25px;\n  font-size: 14px;\n  cursor: pointer;\n  margin-left: auto;\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Label, Input, Button, Form } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newName = e.target.elements.name.value;\n    const newNumber = e.target.elements.number.value;\n    const searchedName = contacts.find(\n      ({ name }) => name.toLowerCase() === newName.toLowerCase()\n    );\n    if (searchedName) {\n      toast(`${newName} is already exist in contacts`, {\n        hideProgressBar: true,\n      });\n    } else {\n      dispatch(addContact({ name: newName, number: newNumber }));\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Phone number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Contact = styled.li`\n  display: flex;\n  gap: 35px;\n  align-items: center;\n`;\nexport const Text = styled.p`\n  font-weight: 500;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  color: #3d0a0a;\n`;","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'components/Form/ContactForm.styled';\nimport { Contact, Text } from './ContactItem.styled';\n\nexport const ContactItem = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Contact key={id}>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </Contact>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectFiltredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filtredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <ul>\n      {filtredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 700;\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  color: #5a1010;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Label } from './ContactFilter.styled';\nimport { Input } from 'components/Form/ContactForm.styled';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    dispatch(setFilterContact(e.currentTarget.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </Label>\n  );\n};\n","import {\n  Container,\n  Section1,\n  Section2,\n  Spinner,\n  Title,\n} from './Contacts.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { ContactForm } from '../../components/Form/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section1>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </Section1>\n      <Section2>\n        <Title>Contacts</Title>\n        <ContactFilter />\n        {isLoading && !error && (\n          <Spinner>\n            <RotatingLines strokeColor=\"#f0c5ae\" width=\"35\" />\n          </Spinner>\n        )}\n        <ContactList />\n      </Section2>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","Section1","Section2","Spinner","Title","selectFilter","state","filter","selectContacts","contacts","selectIsLoading","isLoading","selectError","error","selectFiltredContacts","name","toLowerCase","includes","Form","Label","Input","Button","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","e","target","value","reset","onSubmit","preventDefault","newName","elements","newNumber","find","toast","hideProgressBar","addContact","type","onChange","pattern","title","required","disabled","Contact","Text","ContactItem","id","onClick","deleteContact","ContactList","filtredContacts","map","ContactFilter","setFilterContact","currentTarget","useEffect","fetchContacts","strokeColor","width"],"sourceRoot":""}